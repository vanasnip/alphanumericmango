# Voice Terminal Hybrid CI/CD - Optimized for local execution with act
#
# Usage with act (local execution):
#   Basic run (lint, test, build only):
#     act -j lint-and-check,unit-tests,build
#   
#   Include E2E tests:
#     act -j lint-and-check,unit-tests,e2e-tests,build -s RUN_E2E_TESTS=true
#   
#   Include all tests:
#     act -s RUN_E2E_TESTS=true -s RUN_ACCESSIBILITY_TESTS=true -s RUN_PERFORMANCE_TESTS=true
#
# Local optimization features:
#   - Single Node.js version (20) for faster execution
#   - Local npm caching in node_modules
#   - Minimal browser installs
#   - Skips external services (Percy, Codecov, deployments)
#   - Uses npm install instead of npm ci for better offline support

name: Voice Terminal Hybrid CI/CD

on:
  workflow_call:
    secrets: inherit
  release:
    types: [published, prereleased]
  workflow_dispatch:
    inputs:
      run_expensive_tests:
        description: 'Run expensive tests (E2E, accessibility, performance)'
        required: false
        default: false
        type: boolean

defaults:
  run:
    working-directory: voice-terminal-hybrid

env:
  # Detect act execution
  ACT_EXECUTION: ${{ github.actor || 'false' }}
  # Local cache paths for act
  NPM_CACHE_DIR: ${{ github.actor && './.npm-cache' || '' }}
  NODE_MODULES_CACHE: ${{ github.actor && './voice-terminal-hybrid/node_modules' || '' }}

jobs:
  lint-and-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js (optimized for act)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ github.actor != 'nektos/act' && 'npm' || '' }}
          cache-dependency-path: ${{ github.actor != 'nektos/act' && 'voice-terminal-hybrid/package-lock.json' || '' }}
      
      - name: Cache node_modules for local execution
        if: github.actor == 'nektos/act'
        uses: actions/cache@v3
        with:
          path: voice-terminal-hybrid/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('voice-terminal-hybrid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Running in act - optimized install"
            npm install --prefer-offline --no-audit --no-fund
          else
            npm ci
          fi
      
      - name: Run type checking
        run: npm run check
  
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Simplified matrix for act - only test Node 20 locally
        node-version: ${{ github.actor == 'nektos/act' && fromJSON('["20"]') || fromJSON('["18", "20"]') }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ github.actor != 'nektos/act' && 'npm' || '' }}
          cache-dependency-path: ${{ github.actor != 'nektos/act' && 'voice-terminal-hybrid/package-lock.json' || '' }}
      
      - name: Cache node_modules for local execution
        if: github.actor == 'nektos/act'
        uses: actions/cache@v3
        with:
          path: voice-terminal-hybrid/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('voice-terminal-hybrid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Running in act - optimized install"
            npm install --prefer-offline --no-audit --no-fund
          else
            npm ci
          fi
      
      - name: Run unit tests with coverage
        run: npm run test:coverage
      
      - name: Upload coverage reports
        if: matrix.node-version == 20 && github.actor != 'nektos/act'
        uses: codecov/codecov-action@v3
        with:
          directory: ./voice-terminal-hybrid/coverage
          flags: unittests
          name: voice-terminal-hybrid
  
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [lint-and-check]
    # Run only on releases or when manually requested
    if: (github.event_name == 'release' || github.event.inputs.run_expensive_tests == 'true') && github.actor != 'nektos/act'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ github.actor != 'nektos/act' && 'npm' || '' }}
          cache-dependency-path: ${{ github.actor != 'nektos/act' && 'voice-terminal-hybrid/package-lock.json' || '' }}
      
      - name: Cache node_modules for local execution
        if: github.actor == 'nektos/act'
        uses: actions/cache@v3
        with:
          path: voice-terminal-hybrid/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('voice-terminal-hybrid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Running in act - optimized install"
            npm install --prefer-offline --no-audit --no-fund
          else
            npm ci
          fi
      
      - name: Cache Playwright browsers for local execution
        if: github.actor == 'nektos/act'
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('voice-terminal-hybrid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      
      - name: Install Playwright Browsers
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Installing minimal browser for act"
            npx playwright install chromium
          else
            npx playwright install --with-deps
          fi
      
      - name: Run E2E tests
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Running fast E2E tests for act"
            npm run test:e2e -- --project=chromium --workers=1
          else
            npm run test:e2e
          fi
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always() && github.actor != 'nektos/act'
        with:
          name: playwright-report
          path: voice-terminal-hybrid/playwright-report/
          retention-days: 30
  
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: [lint-and-check]
    # Run only on releases or when manually requested
    if: (github.event_name == 'release' || github.event.inputs.run_expensive_tests == 'true') && github.actor != 'nektos/act'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ github.actor != 'nektos/act' && 'npm' || '' }}
          cache-dependency-path: ${{ github.actor != 'nektos/act' && 'voice-terminal-hybrid/package-lock.json' || '' }}
      
      - name: Cache node_modules for local execution
        if: github.actor == 'nektos/act'
        uses: actions/cache@v3
        with:
          path: voice-terminal-hybrid/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('voice-terminal-hybrid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Running in act - optimized install"
            npm install --prefer-offline --no-audit --no-fund
          else
            npm ci
          fi
      
      - name: Install Playwright Browsers
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Installing minimal browser for act"
            npx playwright install chromium
          else
            npx playwright install --with-deps chromium
          fi
      
      - name: Run accessibility tests
        run: npm run test:accessibility
  
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [lint-and-check]
    # Run only on releases or when manually requested
    if: (github.event_name == 'release' || github.event.inputs.run_expensive_tests == 'true') && github.actor != 'nektos/act'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ github.actor != 'nektos/act' && 'npm' || '' }}
          cache-dependency-path: ${{ github.actor != 'nektos/act' && 'voice-terminal-hybrid/package-lock.json' || '' }}
      
      - name: Cache node_modules for local execution
        if: github.actor == 'nektos/act'
        uses: actions/cache@v3
        with:
          path: voice-terminal-hybrid/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('voice-terminal-hybrid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Running in act - optimized install"
            npm install --prefer-offline --no-audit --no-fund
          else
            npm ci
          fi
      
      - name: Install Playwright Browsers
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Installing minimal browser for act"
            npx playwright install chromium
          else
            npx playwright install --with-deps chromium
          fi
      
      - name: Run performance tests
        run: npm run test:performance
      
      - name: Upload performance results
        uses: actions/upload-artifact@v3
        if: github.actor != 'nektos/act'
        with:
          name: performance-results
          path: voice-terminal-hybrid/test-results/
          retention-days: 7
  
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: [lint-and-check]
    # Run only on releases or when manually requested (requires external service)
    if: (github.event_name == 'release' || github.event.inputs.run_expensive_tests == 'true') && github.actor != 'nektos/act'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: voice-terminal-hybrid/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      
      - name: Run visual tests with Percy
        run: npm run test:visual
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  
  storybook-build:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: [lint-and-check]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ github.actor != 'nektos/act' && 'npm' || '' }}
          cache-dependency-path: ${{ github.actor != 'nektos/act' && 'voice-terminal-hybrid/package-lock.json' || '' }}
      
      - name: Cache node_modules for local execution
        if: github.actor == 'nektos/act'
        uses: actions/cache@v3
        with:
          path: voice-terminal-hybrid/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('voice-terminal-hybrid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Running in act - optimized install"
            npm install --prefer-offline --no-audit --no-fund
          else
            npm ci
          fi
      
      - name: Build Storybook
        run: npm run storybook:build
      
      - name: Upload Storybook artifacts
        uses: actions/upload-artifact@v3
        if: github.actor != 'nektos/act'
        with:
          name: storybook-static
          path: voice-terminal-hybrid/storybook-static/
          retention-days: 7
  
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [unit-tests]
    # Skip e2e-tests dependency for faster act execution
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ github.actor != 'nektos/act' && 'npm' || '' }}
          cache-dependency-path: ${{ github.actor != 'nektos/act' && 'voice-terminal-hybrid/package-lock.json' || '' }}
      
      - name: Cache node_modules for local execution
        if: github.actor == 'nektos/act'
        uses: actions/cache@v3
        with:
          path: voice-terminal-hybrid/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('voice-terminal-hybrid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: |
          if [ "$ACT_EXECUTION" = "true" ]; then
            echo "Running in act - optimized install"
            npm install --prefer-offline --no-audit --no-fund
          else
            npm ci
          fi
      
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: github.actor != 'nektos/act'
        with:
          name: build-output
          path: voice-terminal-hybrid/build/
          retention-days: 7
  
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [build]
    # Deploy preview only on manual dispatch or prerelease
    if: (github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && github.event.release.prerelease)) && github.actor != 'nektos/act'
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: voice-terminal-hybrid/build/
      
      - name: Deploy to preview environment
        id: deploy
        run: |
          echo "Deploying to preview environment..."
          echo "url=https://preview-pr-${{ github.event.pull_request.number }}.example.com" >> $GITHUB_OUTPUT
  
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build]
    # Deploy to production only on full releases (not prereleases)
    if: github.event_name == 'release' && !github.event.release.prerelease && github.actor != 'nektos/act'
    environment:
      name: production
      url: https://voice-terminal.example.com
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: voice-terminal-hybrid/build/
      
      - name: Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add actual deployment commands here